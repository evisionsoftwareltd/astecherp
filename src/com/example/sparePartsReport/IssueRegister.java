package com.example.sparePartsReport;

import java.text.SimpleDateFormat;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;

import org.hibernate.Session;
import org.hibernate.Transaction;

import com.common.share.CommonButton;
import com.common.share.FocusMoveByEnter;
import com.common.share.ReportViewer;
import com.common.share.ReportViewerNew;
import com.common.share.SessionBean;
import com.common.share.SessionFactoryUtil;
import com.vaadin.annotations.AutoGenerated;
import com.vaadin.data.Property.ValueChangeEvent;
import com.vaadin.data.Property.ValueChangeListener;
import com.vaadin.terminal.ThemeResource;
import com.vaadin.ui.AbsoluteLayout;
import com.vaadin.ui.Button;
import com.vaadin.ui.CheckBox;
import com.vaadin.ui.ComboBox;
import com.vaadin.ui.Component;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.DateField;
import com.vaadin.ui.HorizontalLayout;
import com.vaadin.ui.InlineDateField;
import com.vaadin.ui.Label;
import com.vaadin.ui.NativeButton;
import com.vaadin.ui.OptionGroup;
import com.vaadin.ui.PopupDateField;
import com.vaadin.ui.Window;
import com.vaadin.ui.Button.ClickEvent;
import com.vaadin.ui.Window.Notification;

public class IssueRegister extends Window {
	private AbsoluteLayout mainLayout;
	private ComboBox  cmbDeprtmentName;
	private Label lblDepartmentName;
	private Label lblline;
	
	int type=1;
	
	private List<String> typechk=Arrays.asList(new String [] {"PDF","Others"});
	private HorizontalLayout chklayout=new HorizontalLayout();
//	private OptionGroup chktype=new OptionGroup("",typechk);
	private CheckBox chkpdf=new CheckBox("PDF");
	private CheckBox chkother=new CheckBox("Others");
	private CheckBox chkall=new CheckBox("ALL");
	
	private NativeButton previewButton = new NativeButton("Preview");
	private NativeButton exitButton = new NativeButton("Exit");
	private PopupDateField fromDate;
	private PopupDateField toDate;
	private Label lblformDate;
	private Label lbltormDate;
	private SessionBean sessionBean;
	public IssueRegister(SessionBean sessionBean,String str) {
		this.sessionBean = sessionBean;
		buildMainLayout();
		setContent(mainLayout);
		this.setResizable(false);
		this.setCaption("ISSUE REGISTER ::  "+ sessionBean.getCompany());
		cmbDeprtmentName.focus();
		Component ob[]={cmbDeprtmentName,fromDate, toDate,previewButton};
		new FocusMoveByEnter(this, ob);
		addDepartmentName();
		allButtonAction();
	}

	private void allButtonAction()
	{	
		previewButton.addListener(new Button.ClickListener() 
		{
			public void buttonClick(ClickEvent event) {
				if(cmbDeprtmentName.getValue()==null && !chkall.booleanValue()){
					getParent().showNotification("All Fields are Mandetory", Notification.TYPE_WARNING_MESSAGE);
				}
				else{
					reportShow();
				}
			}
		});
		
		exitButton.addListener( new Button.ClickListener() 
		{
			public void buttonClick(ClickEvent event) 
			{
				close();
			}
		});
		
		chkpdf.addListener(new ValueChangeListener()
		{
			
			public void valueChange(ValueChangeEvent event)
			{
				
				if(chkpdf.booleanValue()==true)
					chkother.setValue(false);
				else
					chkother.setValue(true);
				
			}
		});
		
		chkother.addListener(new ValueChangeListener()
		{
			
			public void valueChange(ValueChangeEvent event)
			{
				
				if(chkother.booleanValue()==true)
					chkpdf.setValue(false);
				else
					chkpdf.setValue(true);
				
			}
		});
		chkall.addListener(new ValueChangeListener()
		{
			
			public void valueChange(ValueChangeEvent event)
			{
				
				if(chkall.booleanValue())
					cmbDeprtmentName.setEnabled(false);
				else
					cmbDeprtmentName.setEnabled(true);
				
			}
		});
	}
	
	private void reportShow()
	{
		String query=null;
		String activeFlag = null;
		
		String sectionId= cmbDeprtmentName.getItemCaption(cmbDeprtmentName.getValue());
		
		if(chkall.booleanValue()){
			sectionId="%";
		}else{
			sectionId = cmbDeprtmentName.getValue().toString();
		}
		
		if(chkpdf.booleanValue()==true)
			type=1;
		else
			type=0;
		
		try{

			Session session = SessionFactoryUtil.getInstance().getCurrentSession();
			Transaction tx = session.beginTransaction();

			String FromDate = new SimpleDateFormat("yyyy-MM-dd").format(fromDate.getValue());
			String ToDate =  new SimpleDateFormat("yyyy-MM-dd").format(toDate.getValue());
			
			System.out.println("From Date : "+FromDate+", To Date : "+ToDate);
			
			HashMap hm = new HashMap();
			hm.put("company", sessionBean.getCompany());
			hm.put("address", sessionBean.getCompanyAddress());
			hm.put("phone", sessionBean.getCompanyContact());
			//hm.put("phone", "Phone: "+sessionBean.getCompanyPhone()+"   Fax:  "+sessionBean.getCompanyFax()+",   E-mail:  "+sessionBean.getCompanyEmail());
			hm.put("username", sessionBean.getUserName()+"  "+sessionBean.getUserIp());
			hm.put("fromdate", new SimpleDateFormat("dd-MM-yyyy").format(fromDate.getValue()));
			hm.put("todate",new SimpleDateFormat("dd-MM-yyyy").format(toDate.getValue()));
      
			query="select * from [funcRawIssueRegister]('"+FromDate+"','"+ToDate+"','"+sectionId+"')";
			
			System.out.println(query);
			hm.put("sql", query);

			List list=session.createSQLQuery(query).list();
			if(!list.isEmpty()){
				Window win = new ReportViewerNew(hm,"report/raw/rptIssueRegister.jasper",
						this.getWindow().getApplication().getContext().getBaseDirectory()+"".replace("\\","/")+"/VAADIN/rpttmp",
						this.getWindow().getApplication().getURL()+"VAADIN/rpttmp",false,
						this.getWindow().getApplication().getURL()+"VAADIN/applet",type);
				win.setCaption("Report : Issue Register");
				this.getParent().getWindow().addWindow(win);
			}
			else{
				this.getParent().showNotification("There are no Data!!",Notification.TYPE_WARNING_MESSAGE);
			}
		}
		catch(Exception exp){

			this.getParent().showNotification("Error "+exp,Notification.TYPE_ERROR_MESSAGE);

		}
	}
	
	public void addDepartmentName()
	{
		cmbDeprtmentName.removeAllItems();
		//cmbDeprtmentName.addItem("All");
		Transaction tx = null;
		try{
			Session session = SessionFactoryUtil.getInstance().getCurrentSession();
			tx = session.beginTransaction();
			List list = session.createSQLQuery("select * from tbSectionInfo").list();

			for(Iterator iter=list.iterator();iter.hasNext();)
			{
				Object[] element = (Object[]) iter.next();
				cmbDeprtmentName.addItem(element[1].toString());
				cmbDeprtmentName.setItemCaption(element[1].toString(), element[2].toString());
			}
		}catch(Exception exp){
			this.getParent().showNotification("Error",exp+"",Notification.TYPE_ERROR_MESSAGE);
		}
	}

	@AutoGenerated
	private AbsoluteLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new AbsoluteLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("500px");
		mainLayout.setHeight("220px");
		mainLayout.setMargin(false);
		
		// top-level component properties
		
		// lblDepartmentName
		lblDepartmentName = new Label();
		lblDepartmentName.setImmediate(false);
		lblDepartmentName.setWidth("-1px");
		lblDepartmentName.setHeight("-1px");
		lblDepartmentName.setValue("Department Name :");
		mainLayout.addComponent(lblDepartmentName, "top:40.0px;left:32.0px;");
		
		// cmbDeprtmentName
		cmbDeprtmentName = new ComboBox();
		cmbDeprtmentName.setImmediate(false);
		cmbDeprtmentName.setWidth("260px");
		cmbDeprtmentName.setHeight("24px");
		cmbDeprtmentName.setNullSelectionAllowed(false);
		cmbDeprtmentName.setNewItemsAllowed(false);
		mainLayout.addComponent( cmbDeprtmentName, "top:38.0px;left:142.0px;");

		chkall.setImmediate(true);
		mainLayout.addComponent(chkall, "top:40.0px; left:415.0px");
		
		lblformDate = new Label();
		lblformDate.setImmediate(false);
		lblformDate.setWidth("-1px");
		lblformDate.setHeight("-1px");
		lblformDate.setValue("From Date:");
		mainLayout.addComponent(lblformDate, "top:68.0px;left:78.0px;");
		
		fromDate= new PopupDateField();
		fromDate.setWidth("110px");
		fromDate.setDateFormat("dd-MM-yyyy");
		fromDate.setValue(new java.util.Date());
		fromDate.setResolution(PopupDateField.RESOLUTION_DAY);
		mainLayout.addComponent(fromDate, "top:64.0px;left:142.0px;");
		
		lbltormDate = new Label();
		lbltormDate.setImmediate(true);
		lbltormDate.setWidth("-1px");
		lbltormDate.setHeight("-1px");
		lbltormDate.setValue(" To Date :");
		mainLayout.addComponent(lbltormDate, "top:92.0px;left:90.0px;");
		
		toDate = new PopupDateField();
		toDate.setWidth("110px");
		toDate.setDateFormat("dd-MM-yyyy");
		toDate.setValue(new java.util.Date());
		toDate.setResolution(PopupDateField.RESOLUTION_DAY);
		mainLayout.addComponent(toDate, "top:90.0px;left:142.0px;");
		
		chkpdf.setValue(true);
		chkpdf.setImmediate(true);
		chkother.setImmediate(true);
		chklayout.addComponent(chkpdf);
		chklayout.addComponent(chkother);
		mainLayout.addComponent(chklayout,"top:125.0px; left:140.0px");

		lblline = new Label();
		lblline.setImmediate(false);
		lblline.setWidth("-1px");
		lblline.setHeight("-1px");
		lblline.setValue("________________________________________________________________");
		mainLayout.addComponent(lblline, "top:150.0px;left:20.0px;");

		previewButton.setWidth("80px");
		previewButton.setHeight("28px");
		previewButton.setIcon(new ThemeResource("../icons/print.png"));
		mainLayout.addComponent(previewButton,"top:175.opx; left:170.0px");

		exitButton.setWidth("70px");
		exitButton.setHeight("28px");
		exitButton.setIcon(new ThemeResource("../icons/exit1.png"));
		mainLayout.addComponent(exitButton,"top:175.opx; left:250.0px");
	
		return mainLayout;
	}

}
