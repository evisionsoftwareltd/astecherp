package com.example.rawMaterialReport;

import java.awt.Checkbox;
import java.text.SimpleDateFormat;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;

import org.hibernate.Session;
import org.hibernate.Transaction;

import com.common.share.CommonButton;
import com.common.share.FocusMoveByEnter;
import com.common.share.ReportViewer;
import com.common.share.SessionBean;
import com.common.share.SessionFactoryUtil;
import com.vaadin.annotations.AutoGenerated;
import com.vaadin.data.Property.ValueChangeEvent;
import com.vaadin.data.Property.ValueChangeListener;
import com.vaadin.terminal.ThemeResource;
import com.vaadin.ui.AbsoluteLayout;
import com.vaadin.ui.Button;
import com.vaadin.ui.CheckBox;
import com.vaadin.ui.ComboBox;
import com.vaadin.ui.Component;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.DateField;
import com.vaadin.ui.InlineDateField;
import com.vaadin.ui.Label;
import com.vaadin.ui.NativeButton;
import com.vaadin.ui.PopupDateField;
import com.vaadin.ui.Window;
import com.vaadin.ui.Button.ClickEvent;
import com.vaadin.ui.Window.Notification;

public class RptItemInformation3rd0 extends Window {

	private AbsoluteLayout mainLayout;
	private ComboBox  cmbPartyName;
	private Label lblCategoryName;
	private Label lblProductName;
	private ComboBox  cmbproductName;
	private Label lblsubcategoryName;
	private ComboBox cmbLabelName;
	private CheckBox chkAllLabelName;
	private ComboBox cmbsubsubCategory;
	private Label lblsubsubCategory;
	private Label lblline;
	private NativeButton previewButton = new NativeButton("Preview");
	private NativeButton exitButton = new NativeButton("Exit");
	SessionBean sessionBean;
	private CheckBox chkAllName;
	private CheckBox chkAllParty;
	private CheckBox chkAllsubsubCategory;
	private Label lblCategoryType=new Label();
	private ComboBox cmbSourceName=new ComboBox();
	private CheckBox chkallSourceName=new CheckBox();
	private CheckBox chkpdf,chkother;
	boolean type=true;

	public  RptItemInformation3rd0(SessionBean sessionBean,String str) {
		this.sessionBean = sessionBean;
		buildMainLayout();
		setContent(mainLayout);
		this.setResizable(false);
		this.setCaption("Label Information ::  "+ sessionBean.getCompany());
		cmbSourceName.focus();
		Component ob[]={cmbPartyName,cmbLabelName,previewButton};
		new FocusMoveByEnter(this, ob);
		sourceLoad();
		allButtonAction();

		cmbPartyName.setEnabled(false);
		chkAllParty.setEnabled(false);

		cmbLabelName.setEnabled(false);
		chkAllLabelName.setEnabled(false);
	}

	private AbsoluteLayout buildMainLayout() 
	{
		mainLayout = new AbsoluteLayout();
		mainLayout.setImmediate(false);
		mainLayout.setMargin(false);

		// top-level component properties
		setWidth("560px");
		setHeight("260px");
		
		cmbSourceName = new ComboBox();
		cmbSourceName.setImmediate(true);
		cmbSourceName.setWidth("260px");
		cmbSourceName.setHeight("24px");
		cmbSourceName.setNullSelectionAllowed(false);
		cmbSourceName.setNewItemsAllowed(false);
		cmbSourceName.setFilteringMode(ComboBox.FILTERINGMODE_CONTAINS);

		// chkallSourceName
		chkallSourceName = new CheckBox("");
		chkallSourceName.setCaption("All");
		chkallSourceName.setWidth("-1px");
		chkallSourceName.setHeight("24px");
		chkallSourceName.setImmediate(true);
		chkallSourceName.setVisible(false);		

		// cmbSection
		cmbPartyName = new ComboBox();
		cmbPartyName.setImmediate(true);
		cmbPartyName.setWidth("260px");
		cmbPartyName.setHeight("24px");
		cmbPartyName.setNullSelectionAllowed(false);
		cmbPartyName.setNewItemsAllowed(false);
		cmbPartyName.setFilteringMode(ComboBox.FILTERINGMODE_CONTAINS);

		// chkAllParty
		chkAllParty = new CheckBox("");
		chkAllParty.setCaption("All");
		chkAllParty.setWidth("-1px");
		chkAllParty.setHeight("24px");
		chkAllParty.setImmediate(true);

		// cmbLabelName
		cmbLabelName = new ComboBox();
		cmbLabelName.setWidth("260px");
		cmbLabelName.setHeight("24px");
		cmbLabelName.setImmediate(true);
		cmbLabelName.setNewItemsAllowed(false);
		cmbLabelName.setNullSelectionAllowed(false);
		cmbLabelName.setFilteringMode(ComboBox.FILTERINGMODE_CONTAINS);

		// chkAllLabelName
		chkAllLabelName=new CheckBox("");
		chkAllLabelName.setCaption("All");
		chkAllLabelName.setImmediate(true);
		chkAllLabelName.setWidth("-1px");
		chkAllLabelName.setHeight("24px");
		
		// chkpdf
		chkpdf=new CheckBox("PDF");
		chkpdf.setImmediate(true);
		chkpdf.setValue(true);

		// chkother
		chkother=new CheckBox("Other");
		chkother.setImmediate(true);

		// lblline
		lblline = new Label();
		lblline.setImmediate(false);
		lblline.setWidth("-1px");
		lblline.setHeight("-1px");
		lblline.setContentMode(Label.CONTENT_XHTML);
		lblline.setValue("<font color='#e65100'>======================================================================================================================</font>");

		// previewButton
		previewButton.setWidth("95px");
		previewButton.setHeight("28px");
		previewButton.setIcon(new ThemeResource("../icons/print.png"));

		// exitButton
		exitButton.setWidth("70px");
		exitButton.setHeight("28px");
		exitButton.setIcon(new ThemeResource("../icons/exit1.png"));

		mainLayout.addComponent(new Label("Source Name"), "top:40.0px;left:40.0px;");
		mainLayout.addComponent( cmbSourceName, "top:38.0px;left:186.0px;");
		mainLayout.addComponent(chkallSourceName, "top:40.0px;left:448.0px;");

		mainLayout.addComponent(new Label("Party Name"), "top:70.0px;left:40.0px;");
		mainLayout.addComponent( cmbPartyName, "top:68px;left:186.0px;");	
		mainLayout.addComponent(chkAllParty, "top:70.0px;left:448.0px;");

		mainLayout.addComponent(new Label("Item Name"), "top:100.0px;left:40.0px;");
		mainLayout.addComponent( cmbLabelName, "top:98.0px;left:186.0px;");
		mainLayout.addComponent(chkAllLabelName, "top:100.0px;left:448.0px;");

		mainLayout.addComponent(chkpdf, "top:120px; left:186.0px");
		mainLayout.addComponent(chkother, "top:120px; left:245px");
		mainLayout.addComponent(lblline, "top:150.0px;left:0.0px;");
		mainLayout.addComponent(previewButton,"top:180.opx; left:186.0px");
		mainLayout.addComponent(exitButton,"top:180.opx; left:280.0px");

		return mainLayout;
	}
	private void sourceLoad()
	{
		Session session = SessionFactoryUtil.getInstance().getCurrentSession();
		Transaction tx;
		tx = session.beginTransaction();

		String query = "SElect distinct vSource from tb3rdPartylabelInformation order by vSource";

		System.out.println(query);

		cmbPartyName.removeAllItems();
		List list = session.createSQLQuery(query).list();		
		Iterator iter = list.iterator(); 
			while(iter.hasNext()){
			cmbSourceName.addItem(iter.next());
		}
	}

	private void partyDataLoad()
	{
		Session session = SessionFactoryUtil.getInstance().getCurrentSession();
		Transaction tx;
		tx = session.beginTransaction();
		String sourceName="";

		if(cmbSourceName.getValue()!=null)
		{
			sourceName=cmbSourceName.getValue().toString();
		}

		if(chkallSourceName.booleanValue())
		{
			sourceName="%";
		}

		String query = "SElect vPartyId,vPartyName from tb3rdPartylabelInformation  where vSource like '"+sourceName+"' order by vPartyName";

		System.out.println(query);

		cmbPartyName.removeAllItems();
		List list = session.createSQLQuery(query).list();		
		for(Iterator iter = list.iterator(); iter.hasNext();)
		{
			Object[] element = (Object[]) iter.next();
			cmbPartyName.addItem(element[0]);
			cmbPartyName.setItemCaption(element[0], element[1].toString());
		}
	}

	private void LabelDataload()
	{
		Session session = SessionFactoryUtil.getInstance().getCurrentSession();
		Transaction tx;
		tx = session.beginTransaction();
		String strParty="", strLabel="";
		String strsubsubCategory="";
		String subsubcategory="";
		String sourceName="";
		if(chkAllParty.booleanValue())
		{
			strParty="%";
		}
		else
		{
			strParty=cmbPartyName.getValue().toString();
		}

		if(chkallSourceName.booleanValue())
		{
			sourceName="%";
		}
		else
		{
			sourceName=cmbSourceName.getValue().toString();	
		}


		String query= " SElect vLabelCode,vLabelName from tb3rdPartylabelInformation "
				+ "where vSource like '"+sourceName+"'  and vPartyId like '"+strParty+"' order by vLabelName";


		System.out.println(query);

		List list = session.createSQLQuery(query).list();
		cmbLabelName.removeAllItems();
		for(Iterator iter = list.iterator(); iter.hasNext();)
		{
			Object[] element = (Object[]) iter.next();
			cmbLabelName.addItem(element[0]);
			cmbLabelName.setItemCaption(element[0], element[1].toString());
		}
	}

	private void allButtonAction()
	{
		chkpdf.addListener(new ValueChangeListener()
		{
			public void valueChange(ValueChangeEvent event)
			{
				if(chkpdf.booleanValue())
				{
					chkother.setValue(false);
					type=true;
				}

				else
				{
					chkother.setValue(true);
					type=false;
				}
			}

		});

		chkother.addListener(new ValueChangeListener()
		{
			public void valueChange(ValueChangeEvent event)
			{
				if(chkother.booleanValue())
				{

					chkpdf.setValue(false);
					type=false;

				}
				else
				{

					chkpdf.setValue(true);
					type=true;
				}
			}
		});

		cmbSourceName.addListener(new ValueChangeListener()
		{
			public void valueChange(ValueChangeEvent event)
			{
				if(cmbSourceName.getValue()!=null)
				{

					//LabelDataload();
					cmbPartyName.setEnabled(true);
					chkAllParty.setEnabled(true);

					cmbLabelName.setEnabled(false);
					chkAllLabelName.setEnabled(false);
					
					cmbLabelName.setValue(null);
					chkAllLabelName.setValue(false);

					chkAllParty.setValue(false);

					partyDataLoad();
				}

				else
				{
					if(!chkallSourceName.booleanValue())
					{
					cmbPartyName.setEnabled(false);
					chkAllParty.setEnabled(false);		
					
					cmbPartyName.setValue(null);
					chkAllParty.setValue(false);

					cmbLabelName.setEnabled(false);
					chkAllLabelName.setEnabled(false);
					
					cmbLabelName.setValue(null);
					chkAllLabelName.setValue(false);				
				}
				}
			}
		});
		
		chkallSourceName.addListener(new ValueChangeListener() {
			public void valueChange(ValueChangeEvent event) 
			{
				if(chkallSourceName.booleanValue())
				{
					cmbSourceName.setValue(null);
					cmbSourceName.setEnabled(false);
					partyDataLoad(); 
				}
			}
		});

		cmbPartyName.addListener(new ValueChangeListener() 
		{
			public void valueChange(ValueChangeEvent event) 
			{
				if(cmbPartyName.getValue()!=null)
				{
					cmbLabelName.setEnabled(true);
					chkAllLabelName.setEnabled(true);
					LabelDataload();
				}
				else
				{
					cmbLabelName.setEnabled(false);
					chkAllLabelName.setEnabled(false);
				}
			}
		});

		chkAllParty.addListener(new ValueChangeListener()
		{
			public void valueChange(ValueChangeEvent event) 
			{
				if(chkAllParty.booleanValue()==true)
				{
						cmbPartyName.setValue(null);
						cmbPartyName.setEnabled(false); 
						
						cmbLabelName.setEnabled(true);
						chkAllLabelName.setEnabled(true);

						LabelDataload(); 
					}
					else
					{
						cmbPartyName.setEnabled(true);
						cmbLabelName.setEnabled(false);
						chkAllLabelName.setEnabled(false);

						cmbLabelName.setValue(null);
						chkAllLabelName.setValue(false);

						cmbLabelName.removeAllItems();
						partyDataLoad();
					}
			}
		});

		previewButton.addListener(new Button.ClickListener() 
		{
			public void buttonClick(ClickEvent event) {
				if(cmbPartyName.getValue()!=null || chkAllParty.booleanValue()==true)
				{
					if(cmbLabelName.getValue()!=null || chkAllLabelName.booleanValue()==true)
					{
						reportShow();
					}

					else
					{
						showNotification("Select Label Name", Notification.TYPE_WARNING_MESSAGE);
					}

				}
				else
				{
					getParent().showNotification("Select Party Name", Notification.TYPE_WARNING_MESSAGE);
				}
			}
		});

		exitButton.addListener( new Button.ClickListener() 
		{
			public void buttonClick(ClickEvent event) 
			{
				close();
			}
		});
	
	}
	private void reportShow()
	{
		System.out.println("into Reportshow");
		String query=null;
		String activeFlag = null;
		String partyName="";
		String productID="";
		String labelName="";
		String sourceName="";
		String subsubcategory="";


		if(chkAllParty.booleanValue())
		{
			partyName ="%"; 
		}
		else
		{
			partyName = cmbPartyName.getValue().toString();
		}

		if(chkAllLabelName.booleanValue())
		{
			labelName="%";
		}
		else
		{
			labelName=cmbLabelName.getValue().toString();
		}


		if(cmbSourceName.getValue()!=null)
		{
			sourceName=cmbSourceName.getValue().toString();	
		}

		if(chkallSourceName.booleanValue())
		{
			sourceName="%";	
		}


		try{

			Session session = SessionFactoryUtil.getInstance().getCurrentSession();
			Transaction tx = session.beginTransaction();

			HashMap hm = new HashMap();
			hm.put("sourceName", cmbSourceName.getValue().toString());
			hm.put("company", sessionBean.getCompany());
			hm.put("address", sessionBean.getCompanyAddress());
			hm.put("Phone", sessionBean.getCompanyContact());
			hm.put("username", sessionBean.getUserName()+"  "+sessionBean.getUserIp());
			hm.put("logo", sessionBean.getCompanyLogo());

			System.out.println("Logo Image: "+sessionBean.getCompanyLogo());
			
			query= "SElect vSource,vPartyId,vPartyName,vLabelCode,vLabelName,vUnit,mMax,mRefill,mMin from tb3rdPartylabelInformation where vSource like '"+sourceName+"' and vPartyId like '"+partyName+"' and vLabelCode like '"+labelName+"'"
					+ "order by vSource,vPartyName,vLabelName";

			System.out.println(query);
			hm.put("sql", query);
			System.out.println("123");
			Window win = new ReportViewer(hm,"report/raw/rawProductInfo3rdRpt.jasper",
					this.getWindow().getApplication().getContext().getBaseDirectory()+"".replace("\\","/")+"/VAADIN/rpttmp",
					this.getWindow().getApplication().getURL()+"VAADIN/rpttmp",false,
					this.getWindow().getApplication().getURL()+"VAADIN/applet",type);

			System.out.println("789");

			win.setCaption("Project Report");
			this.getParent().getWindow().addWindow(win);
		}
		catch(Exception exp){

			this.getParent().showNotification("Error "+exp,Notification.TYPE_ERROR_MESSAGE);

		}
	}
}
