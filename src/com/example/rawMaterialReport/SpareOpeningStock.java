package com.example.rawMaterialReport;

import java.text.SimpleDateFormat;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;

import org.hibernate.Session;
import org.hibernate.Transaction;

import com.common.share.CommonButton;
import com.common.share.FocusMoveByEnter;
import com.common.share.ReportViewer;
import com.common.share.SessionBean;
import com.common.share.SessionFactoryUtil;
import com.vaadin.annotations.AutoGenerated;
import com.vaadin.terminal.ThemeResource;
import com.vaadin.ui.AbsoluteLayout;
import com.vaadin.ui.Button;
import com.vaadin.ui.CheckBox;
import com.vaadin.ui.ComboBox;
import com.vaadin.ui.Component;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.InlineDateField;
import com.vaadin.ui.Label;
import com.vaadin.ui.NativeButton;
import com.vaadin.ui.Window;
import com.vaadin.ui.Button.ClickEvent;
import com.vaadin.ui.Window.Notification;
import com.vaadin.data.Property.ValueChangeEvent;
import com.vaadin.data.Property.ValueChangeListener;

public class SpareOpeningStock extends Window {
	@AutoGenerated
	private AbsoluteLayout mainLayout;
	@AutoGenerated
	private CheckBox subCateCheckBox;
	@AutoGenerated
	private CheckBox CategoryCheckBox;
	/*@AutoGenerated
	private CheckBox sectionCheckBox;*/
	@AutoGenerated
	private ComboBox cmbSubCategory;
	@AutoGenerated
	private Label lblSubCategory;
	@AutoGenerated
	private ComboBox cmbCategory;
	@AutoGenerated
	private Label lblCategory;
	/*@AutoGenerated
	private ComboBox cmbSection;*/
	@AutoGenerated
	//private Label lblSection;
	private Label lblline;
	private SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy");

	private NativeButton previewButton = new NativeButton("Preview");
	private NativeButton exitButton = new NativeButton("Exit");
	private InlineDateField dOpeningYear;
	private Label lblOpeningYear;
	private SessionBean sessionBean;
	String sectionId = "";
	String CategoryId = "";
	String SubCategoryId = "";

	public SpareOpeningStock(SessionBean sessionBean,String str) {
		this.sessionBean = sessionBean;
		buildMainLayout();
		setContent(mainLayout);
		this.setResizable(false);
		cmbCategory.focus();
		this.setCaption("SPARE PARTS OPENING STOCK :: "+ sessionBean.getCompany());
		Component ob[]={cmbCategory,cmbSubCategory};
		new FocusMoveByEnter(this,ob);
		//addSectionName();
		addCategoryName();
		AllAction();
	}

	private void AllAction() {
		CategoryCheckBox.addListener(new ValueChangeListener() 
		{
			public void valueChange(ValueChangeEvent event) {
				boolean bv = CategoryCheckBox.booleanValue();
				if(bv==true){
					cmbCategory.setValue(null);
					cmbCategory.setEnabled(false);
					addSubCategoryName();
				}
				else{
					cmbCategory.setEnabled(true);
					subCateCheckBox.setValue(false);
				}
			}
		});

		/*sectionCheckBox.addListener(new ValueChangeListener() 
		{
			public void valueChange(ValueChangeEvent event) {
				boolean bv = sectionCheckBox.booleanValue();
				if(bv==true){
					cmbSection.setValue(null);
					cmbSection.setEnabled(false);
				}
				else{
					cmbSection.setEnabled(true);
				}
			}

		});*/

		cmbCategory.addListener(new ValueChangeListener()
		{

			public void valueChange(ValueChangeEvent event)
			{

				if(cmbCategory.getValue()!=null)
				{
					
				/*	if(subCateCheckBox.booleanValue())
					subCateCheckBox.setValue(false);*/
					addSubCategoryName();

				}

			}
		});

		subCateCheckBox.addListener(new ValueChangeListener() 
		{
			public void valueChange(ValueChangeEvent event) {
				boolean bv = subCateCheckBox.booleanValue();
				if(bv==true){
					cmbSubCategory.setValue(null);
					cmbSubCategory.setEnabled(false);
				}
				else{
					cmbSubCategory.setEnabled(true);
				}
			}
		});

		exitButton.addListener( new Button.ClickListener() 
		{
			public void buttonClick(ClickEvent event) 
			{
				close();
			}
		});

		previewButton.addListener(new Button.ClickListener() 
		{
			public void buttonClick(ClickEvent event) {
				if((cmbCategory.getValue()!=null || CategoryCheckBox.booleanValue()==true) && (cmbSubCategory.getValue()!=null  || subCateCheckBox.booleanValue()==true)){
					reportView();
				}
				else{
					getParent().showNotification("All Fields are Mandetory", Notification.TYPE_WARNING_MESSAGE);
				}
			}
		});
	}

	private void reportView()
	{
		String query=null;

		/*if(sectionCheckBox.booleanValue()==true){
			sectionId = "%";
		}else{
			sectionId = cmbSection.getValue().toString();
		}*/

		if(CategoryCheckBox.booleanValue()==true){
			CategoryId = "%";
		}else{
			CategoryId = cmbCategory.getValue().toString();
		}

		if(subCateCheckBox.booleanValue()==true){
			SubCategoryId = "%";
		}else{
			SubCategoryId = cmbSubCategory.getValue().toString();
		}

		try{
			Session session = SessionFactoryUtil.getInstance().getCurrentSession();
			Transaction tx = session.beginTransaction();

			HashMap hm = new HashMap();
			hm.put("company", sessionBean.getCompany());
			hm.put("address", sessionBean.getCompanyAddress());
			//hm.put("phone", "Phone : "+sessionBean.getCompanyAddress()+" Fax : "+sessionBean.getCompanyFax()+" E-Mail : "+sessionBean.getCompanyEmail();
			//System.out.println(sessionBean.getCompanyAddress());
			hm.put("openyear", dateFormat.format(dOpeningYear.getValue()));
			hm.put("UserName", sessionBean.getUserName()+"  "+sessionBean.getUserIp());

			//select * from vwOpeningStock  where sectionId like '%' and CategoryCode like '%' and SubCategoryID like '%' and datepart( YEAR,openingYear) like '2015'

			/*query="select * from vwOpeningStockNew "+
					" where CategoryCode like '"+CategoryId+"' " +
					" and SubCategoryID like '"+SubCategoryId+"' " +
					" and datepart( YEAR,openingYear) = '"+dateFormat.format(dOpeningYear.getValue())+"'" +
					" order by CategoryCode,SubCategoryID";*/
			
			query = " select a.productId,b.productName,b.unit,c.Group_Id,c.vCategoryName,d.SubGroup_Id,d.vSubCategoryName,a.qty,a.rate,a.amount   from tbSpareProductOpening a "
					+"inner join tbSpareProductDetails b on a.productId=b.productId inner join "
				  +"tbRawItemCategory c "
				  +"on b.categoryId=c.Group_Id  "
				+"left join  "
				+"tbRawItemSubCategory d  "
				+"on d.SubGroup_Id=b.subCategoryId  "
				+"where c.Group_Id like '"+CategoryId+"' and b.productId like '%'  and subCategoryId like '"+SubCategoryId+"'  and  DATEPART(YEAR,a.openingYear) like '"+dateFormat.format(dOpeningYear.getValue())+"'  order by  c.Group_Id,d.SubGroup_Id ";
			
			
			
			System.out.println("query : "+query);
			hm.put("sql", query);

			Window win = new ReportViewer(hm,"report/rptSpareOpeningStock.jasper",
					this.getWindow().getApplication().getContext().getBaseDirectory()+"".replace("\\","/")+"/VAADIN/rpttmp",
					this.getWindow().getApplication().getURL()+"VAADIN/rpttmp",false,
					this.getWindow().getApplication().getURL()+"VAADIN/applet",false);
			win.setCaption("Project Report");
			this.getParent().getWindow().addWindow(win);
		}
		catch(Exception exp){
			this.getParent().showNotification("Error",exp.toString(),Notification.TYPE_ERROR_MESSAGE);
			System.out.println(exp);
		}
	}


	public void addSubCategoryName()
	{
		cmbSubCategory.removeAllItems();
		String strcategory="";
		Transaction tx = null;
		try{
			
			if(CategoryCheckBox.booleanValue())
				strcategory="%";
			else
				strcategory=cmbCategory.getValue().toString();
			Session session = SessionFactoryUtil.getInstance().getCurrentSession();
			tx = session.beginTransaction();
			List list = session.createSQLQuery("select  SubGroup_Id, vSubCategoryName  from tbRawItemSubCategory where Group_Id like (select Group_Id from tbRawItemCategory where Group_Id like '"+strcategory+"' and vCategoryType like 'Spare Parts') ").list();

			if(list.isEmpty())
			{

				subCateCheckBox.setValue(true);

			}

			if(!list.isEmpty())
			{
				subCateCheckBox.setValue(false);
				for(Iterator iter=list.iterator();iter.hasNext();)
				{
					Object[] element = (Object[]) iter.next();
					cmbSubCategory.addItem(element[0]);
					cmbSubCategory.setItemCaption(element[0], element[1].toString());
				}
			}
		}catch(Exception exp){
			this.getParent().showNotification("Error",exp+"",Notification.TYPE_ERROR_MESSAGE);
		}

	}

	/*public void addSectionName()
	{
		cmbSection.removeAllItems();
		Transaction tx = null;
		try{
			Session session = SessionFactoryUtil.getInstance().getCurrentSession();
			tx = session.beginTransaction();
			List list = session.createSQLQuery("select * from tbSectionInfo").list();

			for(Iterator iter=list.iterator();iter.hasNext();)
			{
				Object[] element = (Object[]) iter.next();
				cmbSection.addItem(element[0].toString());
				cmbSection.setItemCaption(element[0].toString(), element[1].toString());

			}
		}catch(Exception exp){
			this.getParent().showNotification("Error",exp+"",Notification.TYPE_ERROR_MESSAGE);
		}
	}*/


	public void addCategoryName()
	{
		cmbCategory.removeAllItems();
		Transaction tx = null;
		try{
			Session session = SessionFactoryUtil.getInstance().getCurrentSession();
			tx = session.beginTransaction();
			List list = session.createSQLQuery("select  Group_Id, vCategoryName from tbRawItemCategory where vCategoryType  like '%Spare Parts%'").list();

			for(Iterator iter=list.iterator();iter.hasNext();)
			{
				Object[] element = (Object[]) iter.next();
				cmbCategory.addItem(element[0]);
				cmbCategory.setItemCaption(element[0], element[1].toString());
			}
		}catch(Exception exp){
			this.getParent().showNotification("Error",exp+"",Notification.TYPE_ERROR_MESSAGE);
		}

	}

	@AutoGenerated
	private AbsoluteLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new AbsoluteLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("460px");
		mainLayout.setHeight("220px");
		mainLayout.setMargin(false);

		// top-level component properties
		setWidth("480px");
		setHeight("270px");

		/*// lblSection
		lblSection = new Label();
		lblSection.setImmediate(false);
		lblSection.setWidth("-1px");
		lblSection.setHeight("-1px");
		lblSection.setValue("Department/Section :");
		mainLayout.addComponent(lblSection, "top:40.0px;left:25.0px;");

		// cmbSection
		cmbSection = new ComboBox();
		cmbSection.setImmediate(false);
		cmbSection.setWidth("260px");
		cmbSection.setHeight("24px");
		cmbSection.setNullSelectionAllowed(false);
		cmbSection.setImmediate(true);
		mainLayout.addComponent(cmbSection, "top:38.0px;left:142.0px;");*/

		// lblCategory
		lblCategory = new Label();
		lblCategory.setImmediate(false);
		lblCategory.setWidth("100.0%");
		lblCategory.setHeight("-1px");
		lblCategory.setValue("Category Name :");
		mainLayout.addComponent(lblCategory,
				"top:66.0px;left:25.0px;");

		// cmbCategory
		cmbCategory = new ComboBox();
		cmbCategory.setImmediate(false);
		cmbCategory.setWidth("260px");
		cmbCategory.setHeight("24px");
		cmbCategory.setNullSelectionAllowed(false);
		cmbCategory.setImmediate(true);
		mainLayout.addComponent(cmbCategory, "top:64.0px;left:142.0px;");

		// lblSubCategory
		lblSubCategory = new Label();
		lblSubCategory.setImmediate(false);
		lblSubCategory.setWidth("-1px");
		lblSubCategory.setHeight("-1px");
		lblSubCategory.setValue("Subcategory Name :");
		mainLayout.addComponent(lblSubCategory, "top:92.0px;left:25.0px;");

		// cmbSubCategory
		cmbSubCategory = new ComboBox();
		cmbSubCategory.setImmediate(false);
		cmbSubCategory.setWidth("260px");
		cmbSubCategory.setHeight("24px");
		cmbSubCategory.setNullSelectionAllowed(false);
		cmbSubCategory.setImmediate(true);
		mainLayout.addComponent(cmbSubCategory, "top:90.0px;left:142.0px;");

		/*// sectionCheckBox
		sectionCheckBox = new CheckBox();
		sectionCheckBox.setCaption("All");
		sectionCheckBox.setImmediate(false);
		sectionCheckBox.setWidth("-1px");
		sectionCheckBox.setHeight("24px");
		sectionCheckBox.setImmediate(true);
		mainLayout.addComponent(sectionCheckBox, "top:40.0px;left:405.0px;");*/

		// CategoryCheckBox
		CategoryCheckBox = new CheckBox();
		CategoryCheckBox.setCaption("All");
		CategoryCheckBox.setImmediate(false);
		CategoryCheckBox.setWidth("-1px");
		CategoryCheckBox.setHeight("24px");
		CategoryCheckBox.setImmediate(true);
		mainLayout.addComponent(CategoryCheckBox, "top:66.0px;left:405.0px;");

		// subCateCheckBox
		subCateCheckBox = new CheckBox();
		subCateCheckBox.setCaption("All");
		subCateCheckBox.setImmediate(false);
		subCateCheckBox.setWidth("-1px");
		subCateCheckBox.setHeight("-1px");
		subCateCheckBox.setImmediate(true);
		mainLayout.addComponent(subCateCheckBox, "top:93.0px;left:405.0px;");

		dOpeningYear = new InlineDateField();
		dOpeningYear.setImmediate(false);
		dOpeningYear.setWidth("-1px");
		dOpeningYear.setHeight("-1px");
		dOpeningYear.setInvalidAllowed(false);
		dOpeningYear.setResolution(6);
		dOpeningYear.setImmediate(true);
		mainLayout.addComponent(dOpeningYear, "top:116.0px;left:142.0px;");	

		lblOpeningYear = new Label();
		lblOpeningYear.setImmediate(false);
		lblOpeningYear.setWidth("-1px");
		lblOpeningYear.setHeight("-1px");
		lblOpeningYear.setValue("Opening Year :");
		mainLayout.addComponent(lblOpeningYear, "top:118.0px;left:60.0px;");

		lblline = new Label();
		lblline.setImmediate(false);
		lblline.setWidth("-1px");
		lblline.setHeight("-1px");
		lblline.setValue("________________________________________________________________");
		mainLayout.addComponent(lblline, "top:160.0px;left:20.0px;");

		previewButton.setWidth("80px");
		previewButton.setHeight("28px");
		previewButton.setIcon(new ThemeResource("../icons/print.png"));
		mainLayout.addComponent(previewButton,"top:185.opx; left:170.0px");

		exitButton.setWidth("70px");
		exitButton.setHeight("28px");
		exitButton.setIcon(new ThemeResource("../icons/exit.png"));
		mainLayout.addComponent(exitButton,"top:185.opx; left:250.0px");

		return mainLayout;
	}

}
